(
	Package
	[std.Tree]
)
// 构造
(
	Bind
	[New]
	[left -> {
			mid -> {
				right -> {
					f -> {
						f
						[left]
						[mid]
						[right]
					}
				}
			}
		}
	]
)
// 取左边部分
(
	Bind
	[GetLeft]
	[tree -> {
			tree
			[left -> {
					mid -> {
						right -> {
							left
						}
					}
				}
			]
		}
	]
)
// 取右边部分
(
	Bind
	[GetRight]
	[tree -> {
			tree
			[left -> {
					mid -> {
						right -> {
							right
						}
					}
				}
			]
		}
	]
)
// 取中间部分
(
	Bind
	[GetValue]
	[tree -> {
			tree
			[left -> {
					mid -> {
						right -> {
							mid
						}
					}
				}
			]
		}
	]
)
// 插入新的值
(
	Bind
	[InsertValue]
	[tree -> {
			value -> {
				if
				[Null?
					[tree]
				]
				[New
					[Null]
					[value]
					[Null]
				]
				[Let
					[treeValue]
					[GetValue
						[tree]
					]
					[Let
						[leftPart]
						[GetLeft
							[tree]
						]
						[Let
							[rightPart]
							[GetRight
								[tree]
							]
							[if
								[<
									[value]
									[treeValue]
								]
								[New
									[InsertValue
										[leftPart]
										[value]
									]
									[treeValue]
									[leftPart]
								]
								[New
									[leftPart]
									[treeValue]
									[InsertValue
										[rightPart]
										[value]
									]
								]
							]
						]
					]
				]
			}
		}
	]
)
